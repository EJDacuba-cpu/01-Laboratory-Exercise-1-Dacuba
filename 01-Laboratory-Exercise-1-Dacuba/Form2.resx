<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>